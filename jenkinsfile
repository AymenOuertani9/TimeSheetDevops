pipeline {
    environment{
        registry = "aymenouertani/timesheeetdevops"
        registryCredential= 'dockerHub'
        dockerImage = ''
        }
    agent any
    stages {
       stage ('GIT') {
            steps {
               echo "Getting Project from Git"; 
                git branch: "aymen", 
                    url: "https://github.com/AymenOuertani9/TimeSheetDevops.git";
                 
            }
        }

        stage("Build") {
            steps {
                bat "mvn -version"
                bat "mvn clean package -DskipTests"
                // sh "mvn clean package -DskipTests" pour une machine linux
            }
        }
       
        stage ('MVN TEST') {
            steps {
                echo "Maven Test JUnit";
                bat 'mvn test';
            }
        }
        
        stage("Sonar") {
            steps {
                bat "mvn sonar:sonar"
            }
        }
        
        stage("DEPLOY") {
            steps {
                bat "mvn clean package deploy:deploy-file -DgroupId=tn.esprit -DartifactId=Timesheet -Dversion=0.2.2 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://localhost:8081/repository/maven-releases/ -Dfile=target/Timesheet-0.2.2.jar -Dmaven.test.skip=true"
            }
        }
        stage('Building our image') {
            steps { script { dockerImage= docker.build registry + ":$BUILD_NUMBER" } }
            }
        stage('Deploy our image') {
            steps { script { docker.withRegistry( '', registryCredential) { dockerImage.push() } } }
            }
        stage('Cleaning up') {
            steps { bat "docker rmi $registry:$BUILD_NUMBER" }
            }
    }
    
        post {
        success {
            emailext body: 'build success', subject: 'Jenkins', to:
            'aymen.ouertani@esprit.tn'
        }
        
        failure {
            emailext body: 'build failure', subject: 'Jenkins', to:
            'aymen.ouertani@esprit.tn'
        }
    }
}
